version: '3.8'
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - kafka
    restart: always  

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development  

  orderkafka:
    build:
      context: ./microservices/orderKafka
    container_name: order-kafka
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka

  faturakafka:
    build:
      context: ./microservices/faturaKafka
    container_name: fatura-kafka
    depends_on:
      - kafka

  payment:
    build:
      context: ./microservices/payment
    container_name: payment-microservice
    ports:
      - "3500:3500"
    depends_on:
      - kafka

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"  


    # DOCKERDA ÇALIŞTIRMAK İÇİN AŞAĞIDAKİ KODLARI KULLANABİLİRSİNİZ

    # image: confluentinc/cp-kafka:latest
    # container_name: kafka
    # depends_on:
    #   - zookeeper
    # environment:
    #   KAFKA_BROKER_ID: 1
    #   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    #   KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    #   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    # ports:
    #   - "9092:9092"    


    # LOCALHOSTTA ÇALIŞTIRMAK İÇİN AŞAĞIDAKİ KODLARI KULLANABİLİRSİNİZ 
    # Yani projenizi (microservices-backend) vs.code ile başlattıktan sonra kafka ve zookeeperın Dockerda çalıştığından emin olun.

    # kafka:
    # image: wurstmeister/kafka:latest
    # ports:
    #   - "9092:9092"
    # environment:
    #   KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
    #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    #   KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
    #   KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    #   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #   KAFKA_CREATE_TOPICS: "my-topic:1:1"
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
